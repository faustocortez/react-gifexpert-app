{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categories","type","onChange","text","target","value","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAS,IAEpBP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,SApBc,SAACL,GACvB,IAAMM,EAAON,EAAEO,OAAOC,MACtBV,EAAcQ,IAmBNE,MAAOX,O,+BCxBVY,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEII,MAAOF,GAFX,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAOlB,MAAQ,CACJC,GAHAD,EAHAC,GAOAC,MAJAF,EAFAE,MAOAV,IALAQ,EADAG,OAAUC,iBAAoBZ,QATnB,kBAmBZM,GAnBY,4CAAH,sDCFPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBACIC,IAAMf,EACNgB,IAAMN,IAEV,4BAAKA,QCNJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDf0BK,CAAa1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAGlDoB,GAAW,mBAAGJ,UAAU,oCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEavBgB,EA5BO,WACpB,MAAoCzC,mBAAS,CAAC,oBAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAQA,OACE,eAAC,WAAD,WACE,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BACIQ,EAAWgB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCnBlB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e3f0518.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes  from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    \n    const [inputValue, setInputValue] = useState(''); // initialze value to aviod undefinied\n    \n    const handleInputChange = (e) => {\n        const text = e.target.value;\n        setInputValue(text);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n\n        if (inputValue.length > 2) {\n            // We can use the previos data in categories only passing the setCategory function\n            setCategories(categories => [inputValue, ...categories]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                onChange={ handleInputChange }\n                value={inputValue}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","\n\n// Al ser async lo que retorna es una promesa que resuelve la\n// colección de las imágenes.\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=LorHcp1hTRLEIFFnzCsCcrXK0nOAS0Ux&q=${ encodeURI(category) }&limit=10`;\n    const response = await fetch( url );\n    const { data } = await response.json();\n\n    const gifs = data.map(img => {\n        const {\n            id,\n            title,\n            images: { downsized_medium: { url} },\n        } = img;\n        \n        return  {\n            id,\n            title,\n            url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img\n                src={ url }\n                alt={ title }\n            />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading} = useFetchGifs(category);\n\n    return (\n        <> \n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            {/* condicion lógica AND */}\n            { loading && <p className=\" animate__animated animate__flash\">Loading...</p> }\n\n            <div className=\"card-grid\">\n                { \n                    images.map(img => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false,\n                });\n            });\n\n    }, [category])\n\n    return state;\n}\n\n// component did mount in react classes\n// the second parameter \"[]\" is a list of dependencies\n// if [] equal to one execution\n// useEffect(() => {\n//     getGifs(category)\n//         // como el argumente del then es el mismo mandado en la función\n//         // interna se usa shortand la función interna de manera directa.\n//         // antes: then(imgs => setImages(imgs))\n//         .then(setImages);\n// }, [ category ]);\n\n// ** LOS EFECTOS NO PUEDEN SER ASYNC PORQUE ESPERAN ALGO SÍNCRONO.\n","import React, { Fragment, useState } from \"react\";\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from \"./components/GifGrid\";\n\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['Attack On Titan']);\n  \n  // const handleAdd = (name) => {\n  //   if (categories.indexOf(name) === -1) {\n  //     setCategories([...categories, name]);\n  //   }\n  // };\n\n  return (\n    <Fragment>\n      <h2>Gift Expert App</h2>\n      <AddCategory setCategories={ setCategories }/>\n\n      <hr />\n\n      <ol>\n        { categories.map((category) => (\n          <GifGrid\n            key={ category }\n            category={ category }\n          />\n        )) }\n      </ol>\n    </Fragment>\n  )\n}\n\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}